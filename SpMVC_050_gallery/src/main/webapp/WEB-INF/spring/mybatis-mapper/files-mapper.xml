<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.callor.gallery.persistance.ext.FileDao">

	<select id="selectAll"></select>
	<select id="findById"></select>
<!-- 개별적으로 한 개 데이터씩 Insert 수행 -->
    <insert id="insert" parameterType="FileDTO">
       INSERT INTO tbl_files
          ( file_gseq, file_original, file_upname )
       VALUES 
          ( #{file_gseq}, #{file_original}, #{file_upname} )
    </insert>
    <!-- 
    
    f_seq값이 있는(이미 있는데이터) 데이터 추가하려고할때
    PK값이 중복되어 내부에서 UNIQUE Exception이 발생하는데 
    이 익셉션을 캐치하여Update로 전환하는 MySQL 고유
    SQL명령문을 사용하여 INSERT OR UPDATE를 수행하는 방법
    
    이때는 이문법을 사용하기 위하여 file_seq 데이터를 INSERT하도록 선행코드가 필요하다
     -->
    <insert id="insertOrUpdate" parameterType="FileDTO">
       INSERT INTO tbl_files
          (file_seq, file_gseq, file_original, file_upname )
       VALUES 
          (#{file_seq}, #{file_gseq}, #{file_original}, #{file_upname} )
          ON DUPLICATE KEY UPDATE
    		file_gseq = #{file_gseq}, 
    		file_original =#{file_original},
    		file_upname = #{file_upname}
    </insert>
    
    
    <!-- List<DTO>에 담긴 데이터를 한꺼번에 Insert -->
    <insert id="insertWithList" parameterType="FileDTO">
       INSERT INTO tbl_files
          (file_gseq, file_original, file_upname )
       VALUES 
       <foreach collection="filesList" item="file" separator=", "> 
          ( #{file.file_gseq}, #{file.file_original}, #{file.file_upname} )
       </foreach>   
       </insert>
    <!-- List<DTO>에 담긴 데이터를 Insert Or Update 수행하기 -->
    <insert id="insertOrUpdateWithList" parameterType="FileDTO">
       INSERT INTO tbl_files
          ( file_seq, file_gseq, file_original, file_upname )
       VALUES 
       <foreach collection="filesList" item="file" separator=", "> 
          (#{file.file_seq},
           #{file.file_gseq},
            #{file.file_original},
             #{file.file_upname} )
       </foreach>   
       AS NEW(f_seq,f_gseq, f_original, f_upname)
       ON DUPLICATE KEY UPDATE 
       file_gseq = f_gseq,
       file_original =f_original,
       file_upname = f_upname
       </insert>
	<update id="update"></update>
	<delete id="delete"></delete>

	<update id="create_table">
		create table IF NOT EXISTS tbl_files(
		file_seq BIGINT AUTO_INCREMENT PRIMARY
		KEY,
		file_gseq BIGINT NOT NULL ,
		file_original VARCHAR(256) NOT NULL,
		file_upname VARCHAR(256) NOT NULL
		);
	</update>

</mapper> 