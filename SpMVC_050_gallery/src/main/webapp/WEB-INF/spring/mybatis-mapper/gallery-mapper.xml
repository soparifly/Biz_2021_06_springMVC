<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.callor.gallery.persistance.ext.GalleryDao">

	<select id="selectAll" resultType="GalleryDTO">
		SELECT * FROM tbl_gallery
		ORDER BY g_date DESC, g_time DESC
	</select>
	<!-- 현재 프로젝트에서 프로젝트를 실행하면 자동으로 table을 검사하여 table이 ㅇ벗으면 새로생성하도록 작성 DDL 명령(CREATE, 
		DROP, ALTER)을 수행하면 Transaction이 완전히 무시된다 Transaction 한가지의 일련의 작업(job)이 진행되는 
		과정에서 다수의 (2개이상의)Table에대하여 SQL(DML, CREATE:INSERT,UPDATE,DELETE) 문이 실행되고 table에 
		저장된 데이터의 변화가 생길때 JOB모두정상적으로 수행되었을때는 COMMIT을 하여 데이터 변화를 완성하고 중간에 사소한exception 
		이라도 발생하면 모든 작업을 ROLLBACK하여 데이터 베이스에 무결성을 보장하는 한가지의 규칙 -->
	<select id="findById" resultType="GalleryDTO">
		SELECT * FROM tbl_gallery
		WHERE
		g_seq = #{g_seq}
	</select>
	<!-- select된 결과를 DTO와 매칭하는 중간단계 RowMapper id: table select 햇을때 pk로 지정된 값 
		property : DTO의 변수이름 column: select된 칼럼이름 AS 된 컬럼이 result : PK가 아닌 칼렘들 -->
	<resultMap type="GalleryDTO" id="galleryDTOResultMap">
		<id property="g_seq" column="g_seq" />
		<result column="g_writer" property="g_writer" />
		<result column="g_date" property="g_date" />
		<result column="g_time" property="g_time" />
		<result column="g_content" property="g_content" />
		<result column="g_image" property="g_image" />
		<collection property="fileList" ofType="FileDTO">
			<id property="file_seq" column="f_seq" />
			<result column="file_original" property="f_original" />
			<result column="file_upname" property="f_upname" />
		</collection>
	</resultMap>

	<sql id="selectGalleryAndFiles">
		SELECT
		G.g_seq AS g_seq,
		G.g_writer AS g_writer,
		G.g_date AS
		g_date, G.g_time AS g_time,
		G.g_subject AS g_subject,
		G.g_content AS
		g_content,
		G.g_image AS g_image,
		F.file_seq AS f_seq,
		F.file_original
		f_original,
		F.file_upname AS f_upname
		FROM tbl_gallery G
		LEFT JOIN
		tbl_files F
		ON G.g_seq = F.file_gseq
		WHERE G.g_seq = #{g_seq}
	</sql>
	<select id="findByIdGalleryFilesResultMap" resultMap="galleryDTOResultMap">
		<include refid="selectGalleryAndFiles">
			<property name="g_seq" value="#{g_seq}" />
		</include>
	</select>
	
	<select id="findByIdGalleryFiles" resultType="GalleryFilesDTO">
		<include refid="selectGalleryAndFiles">
			<property name="g_seq" value="#{g_seq}" />
		</include>
	</select>
	<!-- insert, update tag 에서는 selectKey라는 내부 tag를 사용할 수 있다 insert, update가 
		실행되기전, 후에 다른 SQL 문을 실행하고자 할때 이것을 이용해 insert를 수행한후 (order= 'AFTER')에 last_insert_id()함수를 
		실행하여 GalleryDTO의 g_seq칼럼에 값을 담아달라 하는 요청이다 Transaction이 진행되는 도중에 다른 task에서 
		DDL 이 샐행되거나, TCL(Commit., Rollback)이 실행되면 현재 Task에서 실행되는 Transaction이 무력화 
		되는 현상이 발생한다 mybatis에서는 공식적으로 mapper에서 Dao를 활용하여 DDL 명령을 사용하는것을 밝히지 않는다 -->
	<insert id="insert" parameterType="GalleryDTO">
		INSERT INTO tbl_gallery(
		g_writer,
		g_date,
		g_time,
		g_subject,
		g_content,
		g_image
		) VALUES (
		#{g_writer},
		#{g_date},
		#{g_time},
		#{g_subject},
		#{g_content},
		#{g_image}
		)
		<selectKey keyProperty="g_seq" order="AFTER"
			resultType="Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>


	<update id="update"></update>
	<delete id="delete"></delete>

	<update id="create_table">
		CREATE TABLE IF NOT EXISTS tbl_gallery (
		g_seq BIGINT
		AUTO_INCREMENT PRIMARY
		KEY,
		g_writer VARCHAR(125) NOT NULL ,
		g_date
		VARCHAR(10) NOT NULL ,
		g_time VARCHAR(10) NOT NULL ,
		g_subject
		VARCHAR(50) NOT NULL,
		g_content
		VARCHAR(1000) NOT NULL,
		g_image
		VARCHAR(256)
		)
	</update>
</mapper>