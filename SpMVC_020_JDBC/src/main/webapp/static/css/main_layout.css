@charset "UTF-8";

* {
	/* 미세하게 헤더부분에여백이 있는데 이걸 없애주는 태 */
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

header {
	background-color: #907fa4;
	color: white;
	text-shadow: 1px 1px 1px black;
	text-align: center;
	padding: 2rem;
	/* 1rem은 태그안에 가장 큰 글자의 두배만큼 패딩을 준다는 의미로볼수있 */
}

body {
	display: block;
	flex-direction: column;
	width: :100%;
	height: 100vh;
}

h1.page_title {
	width: 90%;
	/* top, right, bottom, left */
	margin: 10px auto 0 auto;
}

section.main_sec {
	flex: auto;
}
/* 
style지정할때 tag에 id나 class를 부착하지 않고 지정하는 경우
1. 현재 main_layout.css파일은 모든 jsp 에서 공통으로 include 모든 jsp 에 있는 table 에 공통으로 속성이 적용된다

2.만약 특정한 jsp 파일 에서만 table tag에 속성을 부여하고 싶으면 table tag에 id나 class를 지정하고 table#id , 
table.class형식으로 지정해줘야한다
 */
table {
	/* css 2.1적용 spec
	table 구성했을때 td 에 있는 text(content)의 길이가 변동되거나
	table 의 전체 모양이 움찔거리는 현상을 방지하는 속성 */
	table-layout: fixed;
	border-collapse: collapse;
	border-spacing: 0;
	width: 90%;
	margin: 0 auto;
	border-collapse: collapse;
}

table th, td {
	border-top: 1px solid #aaa;
	padding: 5px 8px;
	/* text font크기에 따라 높이를 고정하는 속성 */
	height: 2rem;
}

table td {
	margin-left: 30px;
	text-align: left;
	padding-left: 10px;
}

/* td에 마우스 hover 되면 ellipsis를 해제하여text를 그대로 보여주기  */
/* 이렇게 사용하면 마우스를 올렸을때 text가 다음 td에 겹치는 현상이 발생한다 */
/*  

table td:hover{
	
	overflow: visible;
	text-overflow:inherit;
*/

/* 위의 문제를 방지하는 css */
span {
	position: relative !important;
	height: 1.2rem;
	display: inline-block;
	margin-top: 5px;
}

table td label.truncate {
	display: inline-block; max-width : 80px;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	cursor: inherit;
	max-width: 80px;
}

table td:hover label.truncate {
	position: absolute;
	max-width: none;
	background-color: #aaa;
	overflow: visible;
	top: -6px;
	padding: 5px 20px 5px 0;
	z-index: 100;
}

table tr:last-child td {
	border-bottom: 1px solid #aaa;
}

table tr:last-child (odd) {
	border-bottom: 1px solid #ddd;
}

table tr:last-child (even) {
	border-bottom: 1px solid #eee;
}

table tr:hover (even) {
	border-color: #aaa;
	cusor: pointer;
}

table tr:hover {
	background-color: #aaa;
	cursor: pointer;
}

div.btn_box {
	width: 90%;
	margin: 5px auto;
	text-align: right;
}

button {
	padding: 10px 20px;
	outline: 0;
	border: 0;
}

button.btn_save {
	background-color: #a58faa;
	color: white;
}

button.btn_reset {
	background-color: #green;
	color: white;
}

button.btn_list {
	background-color: #a58faa;
	color: white;
}

button.btn_insert {
	background-color: #a58faa;
	color: white;
}

button.btn_delete {
	background-color: #red;
	color: white;
}

button:hover {
	box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.7);
	cursor: pointer;
}

div#modal {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	background-color: black;
	/* opacity: 0.5; */
	display: none;
}

div#modal span {
	position: absolute;
	display: inline-block;
	top: 30px;
	right: 30px;
	font-size: 30px;
	color: white;
	font-weight: 900;
	border-radius: 50%;
	padding: 10px 20px;
	transition: 0.6s;
	z-index: 100;
}

div#modal span:hover {
	background-color: white;
	cursor: pointer;
}

section.search_sec {
	/* 
		바깥쪽 box의 position이 fiexd로 되어 있기 때문에
		내부의 box를 바깥 box의 중앙에 배치하기 위하여
		position을 absolute로 설정하고
		위치를 지정하였다
		*/
	position: absolute;
	top: 50%;
	left: 50%;
	/* 자기 몸체크기의 x, y방향으로 50%만큼 후진 */
	transform: translate(-50%, -50%);
	background-color: white;
	opacity: 1;
	width: 80%;
	height: 500px;
	display: flex;
	justify-content: center;
	align-content: center;
	overflow: auto;
	z-index: 1000;
	'
}

section.search_sec table {
	margin: 10px auto;
	width: 95%;
	opacity: 1;
}