<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Servlet-context.xml 파일에는 Controller클래스 이후에 할일들, 기능들에 대한 설정이 들어있다 -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<!--  클래스에서 @Comonent, Controller등  어노테이션을 설정하였을때
	Spring Container 에서 보관해달라는 요청을 설정한것  -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- dispetchar 에서 controller로 보내지않고 바로 응답하는 방법 -->
	<!-- localhost:8080/hello/static/***로 폴더에 있는 파일을 찾아라 바로 response하라 이요청은 컨트롤러로 전달되지않는다
	webapp/static 폴더에 있는  -->
	<resources mapping="/static/**" location="/static/" />
	<!-- bean 스프링에서 어노테이션붙은 클래스들을 저장할때 bean이라고 부름 -->
	<!-- Spring Container 가 클래스를 객체로 생성하여 보관하는데 그때 생성된 객체들을 Web Project에서는 보통 bean이라고 부른다 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 초창기 spring 때부터 만들어진 문장 
	InternalResourceViewResolver 클래스를 사용하고싶으니 bean으로 만들어서 컨테이너에 보관해달라는 뜻 
	이클래스의 어떤 메서드를 호출하려고 했더니 클래스 멤버변수(private) 중에 prefix라는 변수 값과 suffix라는 변수값이 필요했다
	그래서 미리 변수값을 setter해달라고 지정하는 것이다 = > property로 지정한다-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 
	Component
	클래스를 객체로 선언하여 만들어둔 요소들 언제든지 사용할 준비가 된 상태
	 -->
	<!-- 혹시 base패키지 아래에 있는 ex (controller, service등등) @어노테이션이 붙어있는 클래스를 모두 bean으로 준비함 -->
	<!--  <context:component-scan base-package="com.callor.hello" /> 
		선택적인 항목 bean 준비
		스캔을 할때 scan하지 않아도 될 클래스를 scan하면서 서버가 시작될때 비효율적인 기능을 수행하는 것을 방지하기위하여
		Scan범위를 c.c.h.controller, c.c.h.service로 제한해 주는 것이 좋다 -->
	<context:component-scan base-package="com.callor.hello.controller" />
	<context:component-scan base-package="com.callor.hello.serivce" />
	
	
	
</beans:beans>
